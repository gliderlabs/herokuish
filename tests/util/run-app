#!/bin/bash

source "$(dirname $BASH_SOURCE)/../cedarish.sh"

check-buildpacks() {
	[[ "$(docker ps -qaf name=herokuish-buildpacks)" ]]
}

download-buildpacks() {
	time docker run --name herokuish-buildpacks \
		-v /tmp/buildpacks \
		gliderlabs/herokuish \
		herokuish buildpack install
}

main() {
	declare app_abspath="$1" expected_output="$2"
	[[ -x "$PWD/build/linux/herokuish" ]] || {
		echo "!! Needs to be run from project root,"
		echo "!! and Linux build needs to exist."
		exit 127
	}
	set -eo pipefail; [[ "$TRACE" ]] && set -x
	check-buildpacks || download-buildpacks
	[[ "$CI" ]] || rmflag="--rm"
	docker run $rmflag -v "$app_abspath:/tmp/app" --volumes-from herokuish-buildpacks gliderlabs/herokuish bash -c "\
		rm -rf /app && cp -r /tmp/app /app
		herokuish buildpack build
		PORT=5678 herokuish procfile start web &
		for retry in \$(seq 1 10); do sleep 1 && nc -z -w 5 localhost 5678 && break; done
		output=\"\$(curl --retry 3 -v -s localhost:5678)\"
		sleep 1
		echo '=== APP OUTPUT ==='
		echo -e \"\$output\"
		echo '=== END OUTPUT ==='
		[[ \"\$output\" == \"$expected_output\" ]]"
}

main "$@"
